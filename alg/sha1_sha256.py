import hashlib

def compute_sha1_hash(string):
    # Create a SHA-1 hash object
    sha1_hash = hashlib.sha1()

    # Update the hash object with the string
    sha1_hash.update(string.encode('utf-8'))

    # Get the hexadecimal representation of the hash value
    hash_value = sha1_hash.hexdigest()

    return hash_value

def compute_sha256_hash(string):
    # Create a SHA-256 hash object
    sha256_hash = hashlib.sha256()

    # Update the hash object with the string
    sha256_hash.update(string.encode('utf-8'))

    # Get the hexadecimal representation of the hash value
    hash_value = sha256_hash.hexdigest()

    return hash_value

# # Test the functions
# text = "Hello, World!"
# #text =  "This is a 32-byte text."
# #text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum eu mauris vitae libero malesuada interdum."
# #text = "49dbe0946a0bf2785128b61297e9f00467fb51a992ff5ee4c7d2d774526d725daea50f6785aa7d66a6228ff2b1e527bfc34902cd5d9faabdf31240616427a4344bdf1d3739eeac513b266459cca8903daaad65e9ac5a3849fe4d2667b1896593a4b149df1afb97e981e75528d7a8e7820061cf4919686cfec0994f7d35e2d4b31cba959710550ee66500c9da01120c0597a3b31014d1533301eaa64360d8e11f8d0e2d369b44224fe3e90fc9792d42f812247752cd077f35ca046cbe99c7e779601d9d8d72c0af7447b021547e7d3856be1d1011b84ecb08ee53954f63b1c536522d7518cb6fe52c8b070806d62aebbf052b3aabab49aa580f2703e058b0b7076a5f479024ee7d733f1a6e9200b9c4d6a2e141b62c91d11dbb284c2e650ce7367ef255b8a1aab7fd8d506af491bd921da8a790c8b8372f2f991e4b10bcdd187a0954e6591db4ba21ed7e9f63d2f19073abdf60a87d01077839d9b23b603a4770a50fe079fd2594df3d1d62b709ac40dd912c699a765b0a0d6df75836722b61926416fb9b375db857fc11634a7b36c44b586d0e5a2333e0ca6f04c76a3331c338f7edc184ac33cf321422a53220afcfdbefb1fe0b280c094fb400b4077829a9a1c0b728fb2c509c9f483de3db2a7e59e23257261053f3cacab046189dee1e910928d461e1da246093e9e62da14f266eec9dcf6b8cb179ef34bf3abfcd761ec0cd1815095e163b0b3091d6b48be7d31b6bf686a236c02f37f5b02823ac80db8eb17a47fd71243d32fa89ae24c33dca43d426828cf944f43cba49840a1897a781511dc9e64258eddfb79c9bab7fac6114185b907bd70998b434e8d6e285301cc2f67f8f7fff7bf203d98c8e1cb2fc68ed6455b870d9350e3d340b098e2f67320d5a62253a68e1c157b18f111bfa9bf65eb5657a5ce329949417a08e67379ea4e680af3a29e909c98a794f86392cc3847b583c85730c19131f5dcf555deb7600cc61875de4c072e93768fdebdd47639922ca83338cf5404f4423d6a308c6d3df2fd48bc402ca8b474beca6c7df5f92e3dcaa4cf9deae3cb7755c01f1170f94dc73c95a0c04798bb362d8f84aafd529567f3950b3b33a1c437f25c335ffbe37170a3a97efa55fd07844ee75a8ae70bbec389b6431b72d7372a970027d9e07570464041156bb4ea93e58f3a6e0ce37a1e326ef6c1f7308e205ff6ff851396cb980c17c7436eb2ed056075cd29d3455ed0be80cf2fbc1bf7a3c1c87669b9f7e8822345f15119d95e4cdf9084b8ff15e7a019644eb2e2b6cf2a53dd005fa9d8730c9862a293e23d65a4534e29d9713c4036f0d01d1451a1e04a9277fb89441766069f03ab74f5a85b2bff3ac8a99e5a60e375fcc91b9870c7e4b101fa17519249a871e5e2c735fcc7e50f6dbb3deaa91a940ae7cd2f0e385a63261f983f1dca6362b288eb5e83dac707b82344090e5cf402e7d7ff1098f8a85ee18f79d7b4dfdbe86fc326c6f424feee223d22a61fac8f416f6d12fa690bcc735b594b761fe9efc95d3efac1f47e3229d3cd17bda18a1a7c4884945e7cd363e46fbf9910d5151179d9fc05e7b7391f864d0374e9457e13e4f3f3787f0cf737095ec0fa3c8d42d9ba4a381d28933e397f8df0ea02b17e329117a67aa32428e01e8f38ba7c8178d2661809f2bb7710abc68d16680fd9796f52c87703288e05465244e1f8b31fc108fd621355bbcdf2a22522835215624ea65d95ba20313cf3d5ebb658a85462844261fb5dad2e31362c8b093d1d4aa15149a8accfd10b90b185789847b7264a8e436fe929f12987b63b173bf83326675e5bcd54db3c140631b0d4719ecb352b7911d155cea4a2b8e02c6ebb5aab4aa57e9e0f2f3f791673cabd1a9849dfcd4dee638499d06c9676f115be8625f1b0c69fcbae068f852e204743cd01f096808586b06b21653383e3c3191bd67b1baa96f14f68ea1d7c3dd3b12dd7db3ce8ad3c81fd0df756344f4236f5702a5cabfe44310c0f45c7075acf314ba29e07b1992a0e786962a7950a3296f8790efcb8c86ac6a65e772afe1ba196be023a32f2128357b257414bfcb535ff5e1867f0050c76b8cd2160fcfc98c07c3886184b4a97afeaf711cff02aab3ad979a736ab653943803728c72972562feb1f0b4785a85228564f8e040b3e952d465b17d7f777d1dbe3e7db746e742c3ee798ee76b0c0e3014c9ecab9e7746953d5301f864e0e621db2a135337d9db30da0e39071fb70689f2c37dc490cb68f4d621fe24c91236ce07c15fc2b5a796df401161232eeee57ef4cd80566668d9248a9abdc1a802a4095f86ca6c8600590c8dab937eaba816fdc03afa765109db542457cb7f252ac64c1bee0e777dfa6561cf259214881f82a2672807c24dd80711627841ee4f70665f751a8518b23bf688786d7257c98b92eabac3c1b7dc82c965043a7ffd52e901110df2b067c8fa9b6c51eb65473af8d841d922e3d176582fde49ad7877868e20c5a581db26f2d90a3d3b3f5e505e1eca9686772c79e7d7567250836717e9fd8cb6c4a150076cde7850382c57ce7ed630985961546fe06d5f007b773d223c5b62945a1c9f166498a8c27a78d936b83c596818732b719ab71fe73e8f1f4827aaf84adb88384ccce8840f6dc3fe30699ad3ec1e2e7aeed29bbba6b7bae6069c5b7bbc03371dfe929d2291870ad199232ab92e1cec5aa094e0610fc991f5bc3601e64c19e3ccc0696fbdc36ca5df4b3fd065bf79f1469eb36b91ca546171751758118edfb69665730051fbafdba95c011a4c409ebb949be4af6ee8309d7275c79d54eb787c4cea887b718077de196b4e7fa8471612c850aae6161c4f6cd0038c9c4f42d7318d36b241fdcf524da1dc7f6ffd802b147ea9bb41"


# sha1_hash = compute_sha1_hash(text)
# print("SHA-1 Hash:", sha1_hash)

# sha256_hash = compute_sha256_hash(text)
# print("SHA-256 Hash:", sha256_hash)

